apiVersion: apps/v1
kind: Deployment
metadata:
  name: $APP_NAME-node-2-sandbox
  namespace: chain-sandbox
spec:
  replicas: 1
  selector:
    matchLabels:
      app: $APP_NAME-node-2-sandbox
  template:
    metadata:
      labels:
        app: $APP_NAME-node-2-sandbox
    spec:
      containers:
      - name: $APP_NAME-node-2-sandbox
        command: [ "/bin/bash" ]
        args: [ "-c","cp -R /root/.fetchd/node2/  /data/blocks/node2/;fetchd start  --json-rpc.api eth,txpool,personal,net,debug,web3,miner --api.enable true --minimum-gas-prices 0.0001afet  --home /data/blocks/node2 --p2p.seeds 951e03e9b5e5df925441158fa0d00ccad71eb4f6@fetch-test-node-0-sandbox.chain-sandbox.svc.cluster.local:26656 " ]
        image:  $REGISTRY/$APP_NAME:SNAPSHOT-$BUILD_NUMBER
        resources:
          requests:
            cpu: 0.1
            memory: 0.5Gi
          limits:
            cpu: 0.8
            memory: 1Gi
        volumeMounts:
        - name: host-time
          mountPath: /etc/localtime
        - name: data
          mountPath: /data/blocks
        imagePullPolicy: IfNotPresent
        ports:
          - containerPort: 1317
          - containerPort: 8545
          - containerPort: 26657
          - containerPort: 26656
        env:
          - name: TZ
            value: GMT
      volumes:
      - name: host-time
        hostPath:
          path: /etc/localtime
      - name: data
        persistentVolumeClaim:
          claimName: vmchain-ssd-pvc
      imagePullSecrets:
      - name: regcred
      restartPolicy: Always
      dnsPolicy: ClusterFirst
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - $APP_NAME-node-2-sandbox
              topologyKey: "kubernetes.io/hostname"
  strategy:
    type: Recreate
